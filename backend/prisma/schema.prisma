// backend/prisma/schema.prisma

generator client {
  provider = "prisma-client-js"
}

// O provedor agora está correto, ele é PostgreSQL.
datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

// As relações e IDs agora estão corretos para o seu banco de dados.
model User {
  id            String         @id @default(uuid())
  email         String         @unique
  name          String?
  password      String?
  oauthId       String?
  createdAt     DateTime       @default(now())
  conversations Conversation[]
  isSubscriber  Boolean        @default(false)
  chats         Chat[]
}

model Chat {
  id           String   @id @default(uuid())
  user         User     @relation(fields: [userId], references: [id])
  userId       String
  message      String
  sender       String
  createdAt    DateTime @default(now())
  isSubscriber Boolean  @default(false)
}

// O modelo Conversation foi corrigido para incluir o campo de título.
model Conversation {
  id           String    @id @default(uuid())
  userId       String
  user         User      @relation(fields: [userId], references: [id], onDelete: Cascade)
  title        String?   // Campo title adicionado de volta, agora opcional.
  createdAt    DateTime  @default(now())
  updatedAt    DateTime  @updatedAt
  messages     Message[]
}

// Este modelo já estava correto e é essencial para o histórico de mensagens.
model Message {
  id             String       @id @default(uuid())
  conversationId String
  conversation   Conversation @relation(fields: [conversationId], references: [id], onDelete: Cascade)
  sender         String
  text           String
  createdAt      DateTime     @default(now())
}