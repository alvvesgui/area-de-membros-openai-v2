// backend/prisma/schema.prisma

generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

model User {
  id               String         @id @default(uuid()) // Alterado de Int para String e adicionado uuid()
  email            String         @unique
  name             String?
  password         String?
  oauthId          String?
  createdAt        DateTime       @default(now())
  chats            Chat[]
  conversations    Conversation[]
  isSubscriber     Boolean        @default(false)
  resetToken       String?
  resetTokenExpiry BigInt?
}

model Chat {
  id            String   @id @default(uuid()) // Alterado para String e uuid()
  user          User     @relation(fields: [userId], references: [id])
  userId        String   // Alterado para String para combinar com User.id
  message       String
  sender        String
  createdAt     DateTime @default(now())
  isSubscriber  Boolean  @default(false)
}

model Conversation {
  id           String    @id @default(uuid()) // Alterado de cuid() para uuid() por consistência
  userId       String    // Alterado para String
  user         User      @relation(fields: [userId], references: [id], onDelete: Cascade)
  title        String
  createdAt    DateTime  @default(now())
  updatedAt    DateTime  @updatedAt
  messages     Message[]
}

model Message {
  id             String       @id @default(uuid()) // Alterado de cuid() para uuid() por consistência
  conversationId String
  conversation   Conversation @relation(fields: [conversationId], references: [id], onDelete: Cascade)
  sender         String
  text           String
  createdAt      DateTime     @default(now())
}